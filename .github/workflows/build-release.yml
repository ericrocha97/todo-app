name: Build & Publish Release APK

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Version name (ex: 1.0.0)'
        required: true
      versionDescription:
        description: 'Version description'
        required: true

jobs:
  build:
    name: Build Release APK
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1. Checkout o código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Instala o JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # 3. Instala o Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          build-tools-version: 34.0.0

      # 4. Dá permissão de execução para o wrapper do Gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 5. Builda o APK release
      - name: Build Release APK
        run: ./gradlew assembleRelease

      # 6. Assina o APK
      - name: Sign APK
        uses: ilharp/sign-android-release@v1
        with:
          releaseDir: app/build/outputs/apk/release
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      # 7. Renomeia o APK assinado
      - name: Rename signed APK
        run: |
          mv app/build/outputs/apk/release/app-release-unsigned-signed.apk \
             app/build/outputs/apk/release/todo-v${{ github.event.inputs.versionName }}.apk

      # 8. Cria um release no GitHub
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.versionName }}
          release_name: Release v${{ github.event.inputs.versionName }}
          body: ${{ github.event.inputs.versionDescription }}
          draft: false
          prerelease: false

      # 9. Faz upload do APK assinado no release
      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/todo-v${{ github.event.inputs.versionName }}.apk
          asset_name: todo-v${{ github.event.inputs.versionName }}.apk
          asset_content_type: application/vnd.android.package-archive